{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nfunction NaverRedirect() {\n  _s();\n  const REACT_APP_API = 'http://3.36.87.184:8080';\n  // const REACT_APP_API = 'ec2-3-36-87-184.ap-northeast-2.compute.amazonaws.com:8080';\n\n  async function naverLogin() {\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      const code = urlParams.get('code');\n      const state = urlParams.get('state');\n      const res = await axios.post(REACT_APP_API + `/api/user-info`, {\n        code: code,\n        state: state\n      });\n      const {\n        accessToken,\n        refreshToken,\n        email,\n        name,\n        jwtToken\n      } = res.data;\n\n      // JSON 객체로 변환하여 로컬 스토리지에 저장\n      const userInfo = {\n        email,\n        name,\n        accessToken,\n        refreshToken,\n        jwtToken // jwtToken 추가\n      };\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\n\n      //   alert(\"로그인이 성공했습니다.\");\n      window.location.href = \"/Home\";\n    } catch (error) {\n      console.error(\"로그인 오류:\", error);\n    }\n  }\n  useEffect(() => {\n    naverLogin();\n  }, []);\n  return null;\n}\n_s(NaverRedirect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = NaverRedirect;\nexport default NaverRedirect;\nvar _c;\n$RefreshReg$(_c, \"NaverRedirect\");","map":{"version":3,"names":["useEffect","axios","NaverRedirect","_s","REACT_APP_API","naverLogin","urlParams","URLSearchParams","window","location","search","code","get","state","res","post","accessToken","refreshToken","email","name","jwtToken","data","userInfo","localStorage","setItem","JSON","stringify","href","error","console","_c","$RefreshReg$"],"sources":["C:/Users/janghyewon/GreenDay/client/greenday_front/src/NaverRedirect.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nfunction NaverRedirect() {\r\n  const REACT_APP_API = 'http://3.36.87.184:8080';\r\n  // const REACT_APP_API = 'ec2-3-36-87-184.ap-northeast-2.compute.amazonaws.com:8080';\r\n\r\n  async function naverLogin() {\r\n    try {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const code = urlParams.get('code');\r\n      const state = urlParams.get('state');\r\n\r\n\r\n      const res = await axios.post(REACT_APP_API + `/api/user-info`, { code: code, state: state });\r\n      const { accessToken, refreshToken, email, name,jwtToken } = res.data;\r\n\r\n      // JSON 객체로 변환하여 로컬 스토리지에 저장\r\n      const userInfo = {\r\n        email,\r\n        name,\r\n        accessToken,\r\n        refreshToken,\r\n        jwtToken // jwtToken 추가\r\n      };\r\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n\r\n    //   alert(\"로그인이 성공했습니다.\");\r\n      window.location.href = \"/Home\";\r\n    } catch (error) {\r\n      console.error(\"로그인 오류:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    naverLogin();\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default NaverRedirect;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,aAAa,GAAG,yBAAyB;EAC/C;;EAEA,eAAeC,UAAUA,CAAA,EAAG;IAC1B,IAAI;MACF,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAC7D,MAAMC,IAAI,GAAGL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC;MAClC,MAAMC,KAAK,GAAGP,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;MAGpC,MAAME,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACX,aAAa,GAAI,gBAAe,EAAE;QAAEO,IAAI,EAAEA,IAAI;QAAEE,KAAK,EAAEA;MAAM,CAAC,CAAC;MAC5F,MAAM;QAAEG,WAAW;QAAEC,YAAY;QAAEC,KAAK;QAAEC,IAAI;QAACC;MAAS,CAAC,GAAGN,GAAG,CAACO,IAAI;;MAEpE;MACA,MAAMC,QAAQ,GAAG;QACfJ,KAAK;QACLC,IAAI;QACJH,WAAW;QACXC,YAAY;QACZG,QAAQ,CAAC;MACX,CAAC;MACDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;;MAE5D;MACEd,MAAM,CAACC,QAAQ,CAACkB,IAAI,GAAG,OAAO;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC;EACF;EAEA5B,SAAS,CAAC,MAAM;IACdK,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb;AAACF,EAAA,CApCQD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAsCtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}