{"ast":null,"code":"module.exports = Paginator;\n\n// Paginator constructor\n//\n// `per_page` is the number of results per page, `length` is the number of\n// pages to display. They default to `25` and `10` respectively.\nfunction Paginator(per_page, length) {\n  // You really should be calling this with `new Paginator`, but WHATEVER.\n  if (!(this instanceof Paginator)) {\n    return new Paginator(per_page, length);\n  }\n\n  // Woo, defaults!\n  this.per_page = per_page || 25;\n  this.length = length || 10;\n}\n\n// Build an object with all the necessary information for outputting pagination\n// controls.\n//\n// (new Paginator(paginator.build(100, 2)\nPaginator.prototype.build = function (total_results, current_page) {\n  // We want the number of pages, rounded up to the nearest page.\n  var total_pages = Math.ceil(total_results / this.per_page);\n\n  // Ensure both total_results and current_page are treated as Numbers\n  total_results = parseInt(total_results, 10);\n  current_page = parseInt(current_page, 10) || 1;\n\n  // Obviously we can't be on a negative or 0 page.\n  if (current_page < 1) {\n    current_page = 1;\n  }\n  // If the user has done something like /page/99999 we want to clamp that back\n  // down.\n  if (current_page > total_pages) {\n    current_page = total_pages;\n  }\n\n  // This is the first page to be displayed as a numbered link.\n  var first_page = Math.max(1, current_page - Math.floor(this.length / 2));\n\n  // And here's the last page to be displayed specifically.\n  var last_page = Math.min(total_pages, current_page + Math.floor(this.length / 2));\n\n  // This is triggered if we're at or near one of the extremes; we won't have\n  // enough page links. We need to adjust our bounds accordingly.\n  if (last_page - first_page + 1 < this.length) {\n    if (current_page < total_pages / 2) {\n      last_page = Math.min(total_pages, last_page + (this.length - (last_page - first_page)));\n    } else {\n      first_page = Math.max(1, first_page - (this.length - (last_page - first_page)));\n    }\n  }\n\n  // This can be triggered if the user wants an odd number of pages.\n  if (last_page - first_page + 1 > this.length) {\n    // We want to move towards whatever extreme we're closest to at the time.\n    if (current_page > total_pages / 2) {\n      first_page++;\n    } else {\n      last_page--;\n    }\n  }\n\n  // First result on the page. This, along with the field below, can be used to\n  // do \"showing x to y of z results\" style things.\n  var first_result = this.per_page * (current_page - 1);\n  if (first_result < 0) {\n    first_result = 0;\n  }\n\n  // Last result on the page.\n  var last_result = this.per_page * current_page - 1;\n  if (last_result < 0) {\n    last_result = 0;\n  }\n  if (last_result > Math.max(total_results - 1, 0)) {\n    last_result = Math.max(total_results - 1, 0);\n  }\n\n  // GIMME THAT OBJECT\n  return {\n    total_pages: total_pages,\n    pages: Math.min(last_page - first_page + 1, total_pages),\n    current_page: current_page,\n    first_page: first_page,\n    last_page: last_page,\n    previous_page: current_page - 1,\n    next_page: current_page + 1,\n    has_previous_page: current_page > 1,\n    has_next_page: current_page < total_pages,\n    total_results: total_results,\n    results: Math.min(last_result - first_result + 1, total_results),\n    first_result: first_result,\n    last_result: last_result\n  };\n};","map":{"version":3,"names":["module","exports","Paginator","per_page","length","prototype","build","total_results","current_page","total_pages","Math","ceil","parseInt","first_page","max","floor","last_page","min","first_result","last_result","pages","previous_page","next_page","has_previous_page","has_next_page","results"],"sources":["C:/Users/janghyewon/GreenDay/client/greenday_front/node_modules/paginator/index.js"],"sourcesContent":["module.exports = Paginator;\n\n// Paginator constructor\n//\n// `per_page` is the number of results per page, `length` is the number of\n// pages to display. They default to `25` and `10` respectively.\nfunction Paginator(per_page, length) {\n  // You really should be calling this with `new Paginator`, but WHATEVER.\n  if (!(this instanceof Paginator)) {\n    return new Paginator(per_page, length);\n  }\n\n  // Woo, defaults!\n  this.per_page = per_page || 25;\n  this.length = length || 10;\n}\n\n// Build an object with all the necessary information for outputting pagination\n// controls.\n//\n// (new Paginator(paginator.build(100, 2)\nPaginator.prototype.build = function(total_results, current_page) {\n  // We want the number of pages, rounded up to the nearest page.\n  var total_pages = Math.ceil(total_results / this.per_page);\n\n  // Ensure both total_results and current_page are treated as Numbers\n  total_results = parseInt(total_results, 10);\n  current_page  = parseInt(current_page, 10) || 1;\n\n  // Obviously we can't be on a negative or 0 page.\n  if (current_page < 1) { current_page = 1; }\n  // If the user has done something like /page/99999 we want to clamp that back\n  // down.\n  if (current_page > total_pages) { current_page = total_pages; }\n\n  // This is the first page to be displayed as a numbered link.\n  var first_page = Math.max(1, current_page - Math.floor(this.length / 2));\n\n  // And here's the last page to be displayed specifically.\n  var last_page = Math.min(total_pages, current_page + Math.floor(this.length / 2));\n\n  // This is triggered if we're at or near one of the extremes; we won't have\n  // enough page links. We need to adjust our bounds accordingly.\n  if (last_page - first_page + 1 < this.length) {\n    if (current_page < (total_pages / 2)) {\n      last_page = Math.min(total_pages, last_page + (this.length - (last_page - first_page)));\n    } else {\n      first_page = Math.max(1, first_page - (this.length - (last_page - first_page)));\n    }\n  }\n\n  // This can be triggered if the user wants an odd number of pages.\n  if (last_page - first_page + 1 > this.length) {\n    // We want to move towards whatever extreme we're closest to at the time.\n    if (current_page > (total_pages / 2)) {\n      first_page++;\n    } else {\n      last_page--;\n    }\n  }\n\n  // First result on the page. This, along with the field below, can be used to\n  // do \"showing x to y of z results\" style things.\n  var first_result = this.per_page * (current_page - 1);\n  if (first_result < 0) { first_result = 0; }\n\n  // Last result on the page.\n  var last_result = (this.per_page * current_page) - 1;\n  if (last_result < 0) { last_result = 0; }\n  if (last_result > Math.max(total_results - 1, 0)) { last_result = Math.max(total_results - 1, 0); }\n\n  // GIMME THAT OBJECT\n  return {\n    total_pages: total_pages,\n    pages: Math.min(last_page - first_page + 1, total_pages),\n    current_page: current_page,\n    first_page: first_page,\n    last_page: last_page,\n    previous_page: current_page - 1,\n    next_page: current_page + 1,\n    has_previous_page: current_page > 1,\n    has_next_page: current_page < total_pages,\n    total_results: total_results,\n    results: Math.min(last_result - first_result + 1, total_results),\n    first_result: first_result,\n    last_result: last_result,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}